{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","prevPage","nextPage","pageNumbers","i","Math","ceil","push","className","cn","disabled","onClick","href","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","itemNumbers","slice","length","onChange","event","parseInt","target","value","id","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2NAYaA,EAA8B,SAAC,GAK1C,IAHK,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAAcC,EACvC,EADuCA,SAAUC,EACjD,EADiDA,SAE/CC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKT,EAAQC,GAAUM,GAAK,EACpDD,EAAYI,KAAKH,GAGnB,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBX,IADzC,SAGE,mBACEY,QAASV,EACT,UAAQ,WACRO,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBb,EALjB,oBAUDI,EAAYU,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASf,IAFhD,SAIE,mBACEY,QAAS,kBAAMX,EAAac,IAC5B,UAAQ,WACRN,UAAU,YACVI,KAAI,WAAME,GAJZ,SAMGA,KATEA,MAaT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUX,IAAgBM,KAAKC,KAAKT,EAAQC,KAFhD,SAKE,mBACEa,QAAST,EACT,UAAQ,WACRM,UAAU,YACVI,KAAK,QACL,gBAAeb,IAAgBM,KAAKC,KAAKT,EAAQC,GALnD,wBCnDFkB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDFKE,CAAW,EAAG,IAAIR,KAAI,SAAAO,GAAC,qBAAYA,MAEpCE,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB2B,EAApB,KAEMC,EAAkB5B,EAAcyB,EAChCI,EAAmBD,EAAkBH,EACrCK,EAAW,YAAOb,EAAMc,MAAMF,EAAkBD,IAoBtD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiC6B,EAAmB,EADpD,cAC2DD,EAAkBX,EAAMe,OAASf,EAAMe,OAASJ,EAD3G,aAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEwB,SAAU,SAACC,GACTR,EAAgBS,SAASD,EAAME,OAAOC,MAAO,KAC7CV,EAAe,IAEjBU,MAAOZ,EACP,UAAQ,kBACRa,GAAG,kBACH7B,UAAU,eARZ,UAUE,wBAAQ4B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOmB,EAAMe,OACbjC,QAAS0B,EACTzB,YAAaA,EACbC,aAAc,SAAAc,GAAI,OAAIY,EAAeZ,IACrCb,SAjDW,WACK,IAAhBF,GACF2B,EAAe3B,EAAc,IAgD3BG,SA5CW,WACXH,EAAcM,KAAKC,KAAKU,EAAMe,OAASP,IACzCE,EAAe3B,EAAc,MA4C7B,6BACG8B,EAAYhB,KAAI,SAAA0B,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YEzEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f3c0c313.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number\n  perPage: number\n  currentPage: number\n  onPageChange: (value: number) => void\n  prevPage: () => void\n  nextPage: () => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange, prevPage, nextPage,\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', { disabled: currentPage === 1 })}\n      >\n        <a\n          onClick={prevPage}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: page === currentPage })}\n        >\n          <a\n            onClick={() => onPageChange(page)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === Math.ceil(total / perPage),\n        })}\n      >\n        <a\n          onClick={nextPage}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === Math.ceil(total / perPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const itemNumbers = [...items.slice(indexOfFirstItem, indexOfLastItem)];\n\n  // const itemNumbers = [];\n\n  // for (let i = 1; i <= itemsPerPage; i++) {\n  //   itemNumbers.push(i);\n  // }\n\n  const prevPage = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage < Math.ceil(items.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${indexOfLastItem > items.length ? items.length : indexOfLastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            onChange={(event) => {\n              setItemsPerPage(parseInt(event.target.value, 10));\n              setCurrentPage(1);\n            }}\n            value={itemsPerPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n      <ul>\n        {itemNumbers.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}